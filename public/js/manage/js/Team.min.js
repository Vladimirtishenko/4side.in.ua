var Team = React.createClass({displayName: "Team",
	render: function () {
		var ArrayTeam = this.props.content.team.length > 0 ? this.props.content.team.map(function(item, i){
			return React.createElement(TemplateTeam, {key: i, data: item, context: TemplateWithoutInput})
		}): null;
		return (
			React.createElement("div", {className: "Team height-full"}, 
				React.createElement("h1", {className: "title-for-block"}, this.props.title), 
				React.createElement("div", {className: "outer-members"}, 
					ArrayTeam, 
					React.createElement(TemplateWithInput, null)
				)
			)
		)
	}
})

var TemplateTeam = React.createClass({displayName: "TemplateTeam",
	
	getInitialState: function(){
		return {
			context: this.props.context,
			data: this.props.data
		}
	},

	replaceTemplate: function(){
		this.setState({
			context: TemplateWithInput,
			data: this.props.data
		})
	},

	deleteItem: function(){
		var _id = this.props.data._id,
			type = 'application/x-www-form-urlencoded',
			url = '/manage/Team',
			actionName = 'Team';

	_controller_.OnlyDelete(_id, null, type, actionName, url);

	},

	render: function(){	
		if(this.props.data == this.state.data)	{
			return (React.createElement(this.state.context, {delets: this.deleteItem, replace: this.replaceTemplate, data: this.state.data}));
		} else {
			return (React.createElement(this.props.context, {delets: this.deleteItem, replace: this.replaceTemplate, data: this.props.data}));
		}
	}	
})

var TemplateWithoutInput = React.createClass({displayName: "TemplateWithoutInput",


	render: function (){
		return (
			React.createElement("div", {className: "outer-of-team"}, 
				React.createElement("div", {className: "members-item"}, 
					React.createElement("i", {className: "fa fa-pencil edit-about-block", onClick: this.props.replace}), 
					React.createElement("i", {className: "fa fa-trash edit-about-block-right", onClick: this.props.delets}), 
					React.createElement("img", {src: this.props.data.src}), 
					React.createElement("h3", null, this.props.data.name), 
					React.createElement("h4", null, this.props.data.profession), 
					React.createElement("p", null, this.props.data.description)
				)
			)
		);
	}
})

var TemplateWithInput = React.createClass({displayName: "TemplateWithInput",

	getInitialState: function(){
		return {
			images: this.props.data ? this.props.data.src : "/images/add-user.png"
		}
	},

	addNewUser: function(){
		event.preventDefault();

		var variables = event.target.querySelectorAll('input'),
			data = {},
			url = '/manage/Team',
			method = 'POST',
			type = null,
			actionName = 'Team',
			self = this;

		for (var i = 0; i < variables.length; i++) {
			if(variables[i].getAttribute('type') == 'file'){
				data[variables[i].getAttribute('name')] = variables[i].files[0]
			} else {
				data[variables[i].getAttribute('name')] = variables[i].value
			}
		};

		event.target.reset();
		setTimeout(function(){self.imageReset()}, 500)
		

		_controller_.OnlyAddNoResponseData(url, data, method, type, actionName);

	},

	imageReset: function(){
		this.setState({
			images: "/images/add-user.png"
		});
	},


	fileReaderImage: function(){

		var reader = new FileReader(),
			self = this,
			files = event.target.files[0];

		reader.onload = (function(theFile) {
		return function(e) {

		  	self.setState({
				images: e.target.result
			})

		};
		})(files);

		reader.readAsDataURL(files);


	},

	render: function (){
		return (
			React.createElement("div", {className: "outer-of-team"}, 
				React.createElement("div", {className: "peloader-to-add"}, React.createElement("img", {src: "/images/preloader_1.gif"})), 
				React.createElement("form", {onSubmit: this.addNewUser, className: "for-for-team-edit-or-add"}, 
					React.createElement("label", {htmlFor: "hidden_file"}, 
						React.createElement("img", {src: this.state.images}), 
						React.createElement("input", {type: "file", onChange: this.fileReaderImage, name: "upload", id: "hidden_file", required: this.props.data ? "" : "required"})
					), 
					React.createElement("input", {type: "text", name: "name", placeholder: "Имя", defaultValue: this.props.data ? this.props.data.name : "", required: "required"}), 
					React.createElement("input", {type: "text", name: "profession", placeholder: "Должность", defaultValue: this.props.data ? this.props.data.profession : "", required: "required"}), 
					React.createElement("input", {type: "text", name: "description", placeholder: "Описание", defaultValue: this.props.data ? this.props.data.description : "", required: "required"}), 
					React.createElement("input", {type: "hidden", name: "id", defaultValue: this.props.data ? this.props.data._id : ""}), 
					React.createElement("button", {type: "submit"}, " + ")
				)
			)
		);
	}
})

allMyComponents['Team'] = Team;